View(raw_activity)
paste(raw_activity$date,raw_activity$tmpinterval,sep=" ")
raw_activity$interval_time <- strptime(paste(raw_activity$date,raw_activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
View(raw_activity)
raw_activity$date_time <- strptime(paste(raw_activity$date,raw_activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
raw_activity$tmpinterval <- NULL
View(raw_activity)
raw_activity <- read.csv("activity.csv") #The default of na.strings = "NA" is what we want
raw_activity$tmpinterval[raw_activity$interval < 10] <- paste("000", raw_activity$interval[raw_activity$interval < 10], sep="")
raw_activity$tmpinterval[raw_activity$interval >= 10 & raw_activity$interval < 100] <- paste("00", raw_activity$interval[raw_activity$interval >= 10 & raw_activity$interval < 100], sep="")
raw_activity$tmpinterval[raw_activity$interval >= 100 & raw_activity$interval < 1000] <- paste("0", raw_activity$interval[raw_activity$interval >= 100 & raw_activity$interval < 1000], sep="")
raw_activity$tmpinterval[raw_activity$interval >= 1000] <- raw_activity$interval[raw_activity$interval >= 1000]
raw_activity$date_time <- strptime(paste(raw_activity$date,raw_activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
raw_activity$tmpinterval <- NULL
View(raw_activity)
steps_per_day <- setNames(aggregate(raw_activity$steps, by=list(raw_activity$date), FUN = sum), c("day","steps"))
hist(steps_per_day$steps)
mean(steps_per_day$steps, na.rm = TRUE)
median(steps_per_day$steps, na.rm = TRUE)
strptime(raw_activity$date_time, "%H:%M")
raw_activity$date_time - trunc(raw_activity$date_time,"days")
as.POSIXct(raw_activity$date_time - trunc(raw_activity$date_time,"days"))
?as.POSIXct
?call
?class
class(as.POSIXct(raw_activity$date_time - trunc(raw_activity$date_time,"days")))
class(raw_activity$date_time - trunc(raw_activity$date_time,"days"))
raw_activity$tmpinterval[raw_activity$interval < 10] <- paste("000", raw_activity$interval[raw_activity$interval < 10], sep="")
raw_activity$tmpinterval[raw_activity$interval >= 10 & raw_activity$interval < 100] <- paste("00", raw_activity$interval[raw_activity$interval >= 10 & raw_activity$interval < 100], sep="")
raw_activity$tmpinterval[raw_activity$interval >= 100 & raw_activity$interval < 1000] <- paste("0", raw_activity$interval[raw_activity$interval >= 100 & raw_activity$interval < 1000], sep="")
raw_activity$tmpinterval[raw_activity$interval >= 1000] <- raw_activity$interval[raw_activity$interval >= 1000]
View(raw_activity)
raw_activity$time <- strptime(paste("1970-01-01",raw_activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
View(raw_activity)
View(steps_per_day)
raw_activity$newdate <- as.Date(date)
?as.Date(
?as.Date()
)
raw_activity$newdate <- as.Date(raw_activity$date)
View(raw_activity)
raw_activity$date <- as.Date(raw_activity$date) #Change the date variable to be a proper date
View(raw_activity)
activity <- read.csv("activity.csv") #The default of na.strings = "NA" is what we want
activity$tmpinterval[activity$interval < 10] <- paste("000", activity$interval[activity$interval < 10], sep="")
activity$tmpinterval[activity$interval >= 10 & activity$interval < 100] <- paste("00", activity$interval[activity$interval >= 10 & activity$interval < 100], sep="")
activity$tmpinterval[activity$interval >= 100 & activity$interval < 1000] <- paste("0", activity$interval[activity$interval >= 100 & activity$interval < 1000], sep="")
activity$tmpinterval[activity$interval >= 1000] <- activity$interval[activity$interval >= 1000]
activity$date_time <- strptime(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
activity$time <- strptime(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
activity$date <- as.Date(activity$date) #Change the date variable to be a proper date
View(activity)
activity$tmpinterval <- NULL
View(activity)
steps_per_day <- setNames(aggregate(activity$steps, by=list(activity$date), FUN = sum), c("day","steps"))
View(steps_per_day)
hist(steps_per_day$steps)
mean(steps_per_day$steps, na.rm = TRUE)
median(steps_per_day$steps, na.rm = TRUE)
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE)
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=activity$time, FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("interval","steps"))
View(steps_per_5min_interval)
?list
list(activity$time)
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
activity$tmpinterval[activity$interval < 10] <- paste("000", activity$interval[activity$interval < 10], sep="")
activity$tmpinterval[activity$interval >= 10 & activity$interval < 100] <- paste("00", activity$interval[activity$interval >= 10 & activity$interval < 100], sep="")
activity$tmpinterval[activity$interval >= 100 & activity$interval < 1000] <- paste("0", activity$interval[activity$interval >= 100 & activity$interval < 1000], sep="")
activity$tmpinterval[activity$interval >= 1000] <- activity$interval[activity$interval >= 1000]
activity$t <- strptime(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$t), FUN = mean, na.rm = TRUE), c("time","steps"))
str(activity$t)
steps_per_5min_interval <- setNames(aggregate(steps ~ time, data = activitiy, FUN = mean, na.rm = TRUE), c("interval","steps"))
steps_per_5min_interval <- setNames(aggregate(steps ~ time, data = activity, FUN = mean, na.rm = TRUE), c("interval","steps"))
str(activity$t)
aggregate(activity$steps, by=list(activity$date), FUN = sum)
aggregate(activity$steps, by=list(activity$time), FUN = sum)
unique(activity$time)
aggregate(activity$steps, by=list(activity$time), FUN = sum)
aggregate(activity$steps, by=list(activity$date_time), FUN = sum)
activity$time <- as.POSIXct(strptime(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M"))
aggregate(activity$steps, by=list(activity$time), FUN = sum)
aggregate(activity$steps, by=list(activity$time), FUN = sum, na.rm = TRUE)
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
View(steps_per_5min_interval)
steps_per_5min_time <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("interval","steps"))
View(steps_per_5min_time)
View(steps_per_5min_interval)
steps_per_5min_time$time[which.max(steps_per_5min_time$steps)]
max(steps_per_5min_time$steps)
plot(steps_per_5min_time, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days (showing stretch)")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "interval showing stretch between the 55 and hundred values")
plot(steps_per_5min_time, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days")
plot(steps_per_5min_time, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "
time of day")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "interval showing stretch between the 55 and hundred values")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "interval - showing stretch between the 55 and hundred values")
steps_per_5min_time$time[which.max(steps_per_5min_time$steps)]
is.na(activity)
which(is.na(activity))
length(is.na(activity))
length(activity)
nrow(is.na(activity))
nrow(which(is.na(activity))
)
nrow(which(is.na(activity)))
length(which(is.na(activity)))
length(is.na(activity))
length(which(is.na(activity)))
which(is.na(activity))
length(which(is.na(activity$steps)))
length(which(is.na(activity)))
length(which(is.na(activity$date)))
length(which(is.na(activity$interval)))
length(which(is.na(activity$date_time)))
which(is.na(activity$date_time))
actitivty$date_time(is.na(activity$date_time))
activity$date_time(is.na(activity$date_time))
activity$date_time(which(is.na(activity$date_time)))
activity$date_time(which(is.na(activity$date_time)))
which(is.na(activity$date_time))
activity$date_time[which(is.na(activity$date_time))]
activity$date_time[is.na(activity$date_time)]
activity[is.na(activity$date_time)]
activity[is.na(activity$date_time),]
length(which(is.na(activity$steps)))
activity <- read.csv("activity.csv") #The default of na.strings = "NA" is what we want
activity$tmpinterval[activity$interval < 10] <- paste("000", activity$interval[activity$interval < 10], sep="")
activity$tmpinterval[activity$interval >= 10 & activity$interval < 100] <- paste("00", activity$interval[activity$interval >= 10 & activity$interval < 100], sep="")
activity$tmpinterval[activity$interval >= 100 & activity$interval < 1000] <- paste("0", activity$interval[activity$interval >= 100 & activity$interval < 1000], sep="")
activity$tmpinterval[activity$interval >= 1000] <- activity$interval[activity$interval >= 1000]
activity$date_time <- strptime(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
activity$time <- as.POSIXct(strptime(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M"))
activity$date <- as.Date(activity$date) #Change the date variable to be a proper date
activity$tmpinterval <- NULL
steps_per_day <- setNames(aggregate(activity$steps, by=list(activity$date), FUN = sum), c("day","steps"))
hist(steps_per_day$steps)
mean(steps_per_day$steps, na.rm = TRUE)
median(steps_per_day$steps, na.rm = TRUE)
steps_per_5min_time <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("interval","steps"))
steps_per_5min_time$time[which.max(steps_per_5min_time$steps)]
max(steps_per_5min_time$steps)
plot(steps_per_5min_time, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "
time of day")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "interval - showing stretch between the 55 and hundred values")
length(which(is.na(activity$steps)))
length(which(is.na(activity)))
View(activity)
activity[is.na(activity$date_time),]
activity[is.na(activity$date_time)]
activity$date_time[is.na(activity$date_time)]
is.na(activity$date_time)
which(is.na(activity$date_time))
activity[which(is.na(activity$date_time))]
activity[which(is.na(activity$date_time)),]
?is.na
activity$date_time <- as.POSIXct(strptime(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M"))
activity[which(is.na(activity$date_time)),]
activity[which(is.na(activity$date_time)),]
which(is.na(activity$date_time))
which(is.na(activity$date_time))
View(activity)
activity <- read.csv("activity.csv") #The default of na.strings = "NA" is what we want
activity$tmpinterval[activity$interval < 10] <- paste("000", activity$interval[activity$interval < 10], sep="")
activity$tmpinterval[activity$interval >= 10 & activity$interval < 100] <- paste("00", activity$interval[activity$interval >= 10 & activity$interval < 100], sep="")
activity$tmpinterval[activity$interval >= 100 & activity$interval < 1000] <- paste("0", activity$interval[activity$interval >= 100 & activity$interval < 1000], sep="")
activity$tmpinterval[activity$interval >= 1000] <- activity$interval[activity$interval >= 1000]
activity$date_time <- as.POSIXct(strptime(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M"))
activity$time <- as.POSIXct(strptime(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M"))
activity$date <- as.Date(activity$date) #Change the date variable to be a proper date
which(is.na(activity$date_time))
activity$tmpinterval <- NULL
activity[which(is.na(activity$date_time)),]
activity <- read.csv("activity.csv") #The default of na.strings = "NA" is what we want
activity$tmpinterval[activity$interval < 10] <- paste("000", activity$interval[activity$interval < 10], sep="")
activity$tmpinterval[activity$interval >= 10 & activity$interval < 100] <- paste("00", activity$interval[activity$interval >= 10 & activity$interval < 100], sep="")
activity$tmpinterval[activity$interval >= 100 & activity$interval < 1000] <- paste("0", activity$interval[activity$interval >= 100 & activity$interval < 1000], sep="")
activity$tmpinterval[activity$interval >= 1000] <- activity$interval[activity$interval >= 1000]
activity$date_time <- as.POSIXct(strptime(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M"))
activity$time <- as.POSIXct(strptime(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M"))
activity[which(is.na(activity$date_time)),]
activity[1752:1765,]
"2012-10-07"=="2012-10-07"
"2012-10-07"=="2012-10-o7"
"2012-10-07"=="2012-10-07"
activity$date_time2 <- strptime(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
activity[which(is.na(activity$date_time2)),]
as.POSIXct(activity[which(is.na(activity$date_time2)),])
as.POSIXct(activity$date_time2[which(is.na(activity$date_time2)),])
activity$date_time2[which(is.na(activity$date_time2)),]
activity$date_time2[which(is.na(activity$date_time2))]
as.POSIXct(activity$date_time2[which(is.na(activity$date_time2)))
as.POSIXct(activity$date_time2[which(is.na(activity$date_time2))])
as.POSIXlt(activity$date_time2[which(is.na(activity$date_time2))])
View(activity)
as.POSIXct(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
warnings()
as.POSIXct(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity$date_time <- as.POSIXct(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity[which(is.na(activity$date_time)),]
which(is.na(activity$date_time))
which(is.na(activity))
lengtyh(which(is.na(activity)))
length(which(is.na(activity)))
activity$date_time2 <- as.POSIXct(strptime(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT"))
activity$time <- as.POSIXct(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M")
activity$time <- as.POSIXct(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity$time <- as.POSIXct(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity$time <- as.POSIXct(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
length(which(is.na(activity)))
activity <- read.csv("activity.csv") #The default of na.strings = "NA" is what we want
activity$tmpinterval[activity$interval < 10] <- paste("000", activity$interval[activity$interval < 10], sep="")
activity$tmpinterval[activity$interval >= 10 & activity$interval < 100] <- paste("00", activity$interval[activity$interval >= 10 & activity$interval < 100], sep="")
activity$tmpinterval[activity$interval >= 100 & activity$interval < 1000] <- paste("0", activity$interval[activity$interval >= 100 & activity$interval < 1000], sep="")
activity$tmpinterval[activity$interval >= 1000] <- activity$interval[activity$interval >= 1000]
activity$date_time <- as.POSIXct(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity$time <- as.POSIXct(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity$date <- as.Date(activity$date) #Change the date variable to be a proper date
activity$tmpinterval <- NULL
steps_per_day <- setNames(aggregate(activity$steps, by=list(activity$date), FUN = sum), c("day","steps"))
hist(steps_per_day$steps)
mean(steps_per_day$steps, na.rm = TRUE)
median(steps_per_day$steps, na.rm = TRUE)
steps_per_5min_time <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("interval"
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("interval","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("interval","steps"))
steps_per_5min_time$time[which.max(steps_per_5min_time$steps)]
max(steps_per_5min_time$steps)
plot(steps_per_5min_time, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "
time of day")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "interval - showing stretch between the 55 and hundred values")
length(which(is.na(activity$steps)))
View(activity)
View(steps_per_5min_interval)
View(steps_per_5min_time)
View(steps_per_day)
?length
length(which(is.na(activity$steps)))
length(which(is.na(activity)))
?numrows
?numrow
?rownums
?rownum
?nrow
nrow(which(is.na(activity)))
length(which(is.na(activity)))
nrow(which(is.na(activity$steps)))
which(is.na(activity$steps))
nrow(which(is.na(activity$steps)))
which(is.na(activity))
length(which(is.na(activity)))
unique(activity$date[is.na(activity)])
activity$date %in% unique(activity$date[is.na(activity)])
!is.na(activity$date %in% unique(activity$date[is.na(activity)]))
activity[!is.na(activity$date %in% unique(activity$date[is.na(activity)])),]
head(activity[!is.na(activity$date %in% unique(activity$date[is.na(activity)])),])
head(activity[!is.na(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])]),])
activity[!is.na(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])]),]
activity[!is.na(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])]),]
activity[is.na(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])]),]
activity[!is.na(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])]),]
!is.na(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])])
length(which(is.na(activity)))
activity$date %in% unique(activity$date[is.na(activity)])
unique(activity$date[is.na(activity)])
activity$date %in% unique(activity$date[is.na(activity)])
length(activity$date %in% unique(activity$date[is.na(activity)]))
which(activity$date %in% unique(activity$date[is.na(activity)]))
unique(activity$steps[which(activity$date %in% unique(activity$date[is.na(activity)]))])
unique(activity$date[is.na(activity)])
unique(activity$steps[which(activity$date %in% unique(activity$date[is.na(activity)]))])
activity[1]
activity[1,]
activity$steps[1,] <- 1
activity$steps[1] <- 1
activity$steps[1,] <- 1
activity[1,]
unique(activity$steps[which(activity$date %in% unique(activity$date[is.na(activity)]))])
unique(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])])
unique(activity$steps[activity$date %in% unique(activity$date[!is.na(activity)])])
unique(activity$steps)
unique(activity$date[is.na(activity)])]
unique(activity$date[is.na(activity)])
activity[activity$date == "2012-10-01",]
unique(activity$date[is.na(activity)])
activity[activity$date == "2012-10-08",]
unique(activity$date[is.na(activity)])
activity[activity$date == "2012-11-01",]
activity[activity$date == "2012-11-01",]
unique(activity$date[is.na(activity)])
activity[activity$date == "2012-11-04",]
unique(activity$date[is.na(activity)])
activity[activity$date == "2012-11-10",]
unique(activity[activity$date == "2012-11-10",])
unique(activity$steps[activity$date == "2012-11-10"])
unique(activity$date[is.na(activity)])
unique(activity$steps[activity$date == "2012-11-30"])
unique(activity$steps[activity$date == "2012-11-14"])
unique(activity$steps[activity$date == "2012-11-10"])
unique(activity$steps[activity$date == "2012-11-09"])
unique(activity$steps[activity$date == "2012-11-04"])
unique(activity$steps[activity$date == "2012-11-01"])
unique(activity$steps[activity$date == "2012-10-08"])
unique(activity$steps[activity$date == "2012-10-01"])
unique(activity$steps[activity$date == "2012-10-02"])
unique(activity$date[is.na(activity)])
nrow(activity$steps[activity$date == "2012-10-02"])
length(activity$steps[activity$date == "2012-10-02"])
length(steps_per_5min_time)
nrow(steps_per_5min_time)
activities_no_na <- activities
activity_no_na <- activity
length(unique(activity$date[is.na(activity)])))
unique(activity$date[is.na(activity)])
length(unique(activity$date[is.na(activity)]))
nrow(unique(activity$date[is.na(activity)]))
length(activity$steps[activity$date == "2012-10-02"])
unique(activity$date[is.na(activity)])
length(activity$steps[activity$date == "2012-10-02"])
length(activity$steps[activity$date == "2012-10-01"])
length(activity$steps[activity$date == "2012-10-08"])
length(activity$steps[activity$date == "2012-11-01"])
length(activity$steps[activity$date == "2012-11-04"])
length(activity$steps[activity$date == "2012-11-09"])
length(activity$steps[activity$date == "2012-11-10"])
length(activity$steps[activity$date == "2012-11-14"])
length(activity$steps[activity$date == "2012-11-30"])
activities_no_na[is.na(activities_no_na)] <- rep(steps_per_5min_time, length(unique(activity$date[is.na(activity)])))
activity_no_na[is.na(activity_no_na)] <- rep(steps_per_5min_time, length(unique(activity_no_na$date[is.na(activity_no_na)])))
rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)])))
length(rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)]))))
activity_no_na$steps[is.na(activity_no_na)] <- rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)])))
activity_no_na <- activity
length(activity_no_na$steps[is.na(activity_no_na)])
rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)])))
length(rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)]))))
rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)])))
length(activity_no_na$steps[is.na(activity_no_na)])
length(rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)]))))
length(is.na(activity_no_na)])
length(is.na(activity_no_na))
activity_no_na <- activity
length(is.na(activity_no_na))
View(activity_no_na)
activity <- read.csv("activity.csv") #The default of na.strings = "NA" is what we want
activity$tmpinterval[activity$interval < 10] <- paste("000", activity$interval[activity$interval < 10], sep="")
activity$tmpinterval[activity$interval >= 10 & activity$interval < 100] <- paste("00", activity$interval[activity$interval >= 10 & activity$interval < 100], sep="")
activity$tmpinterval[activity$interval >= 100 & activity$interval < 1000] <- paste("0", activity$interval[activity$interval >= 100 & activity$interval < 1000], sep="")
activity$tmpinterval[activity$interval >= 1000] <- activity$interval[activity$interval >= 1000]
activity$date_time <- as.POSIXct(paste(activity$date,activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity$time <- as.POSIXct(paste("1970-01-01",activity$tmpinterval,sep=" "),"%Y-%m-%d %H%M", tz = "GMT")
activity$date <- as.Date(activity$date) #Change the date variable to be a proper date
activity$tmpinterval <- NULL
steps_per_day <- setNames(aggregate(activity$steps, by=list(activity$date), FUN = sum), c("day","steps"))
hist(steps_per_day$steps)
mean(steps_per_day$steps, na.rm = TRUE)
median(steps_per_day$steps, na.rm = TRUE)
steps_per_5min_time <- setNames(aggregate(activity$steps, by=list(activity$time), FUN = mean, na.rm = TRUE), c("time","steps"))
steps_per_5min_interval <- setNames(aggregate(activity$steps, by=list(activity$interval), FUN = mean, na.rm = TRUE), c("interval","steps"))
steps_per_5min_time$time[which.max(steps_per_5min_time$steps)]
max(steps_per_5min_time$steps)
plot(steps_per_5min_time, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "
time of day")
plot(steps_per_5min_interval, type = "l", main = "Average number of steps taken by 5min interval, averaged across all days", xlab = "interval - showing stretch between the 55 and hundred values")
length(which(is.na(activity$steps)))
length(which(is.na(activity)))
unique(activity$date[is.na(activity)])
unique(activity$steps[activity$date %in% unique(activity$date[is.na(activity)])])
activity_no_na <- activity
activity_no_na$steps[is.na(activity_no_na)] <- rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)])))
length(is.na(activity_no_na))
length(is.na(activity))
activity_no_na$steps[is.na(activity_no_na$steps)] <- rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)])))
is.na(activity_no_na)
length(is.na(activity_no_na))
length(is.na(activity_no_na$steps))
View(activity_no_na)
steps_per_5min_interval_no_na <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$interval), FUN = mean, na.rm = TRUE), c("interval","steps"))
hist(steps_per_5min_interval_no_na$steps)
length(rep(steps_per_5min_time$steps, length(unique(activity_no_na$date[is.na(activity_no_na)]))))
length(rep(steps_per_5min_time$steps, length(unique(activity$date[is.na(activity)]))))
activity_no_na - activity
activity_no_na <> activity
activity_no_na != activity
length(activity_no_na != activity)
length(which(activity_no_na != activity))
which(activity_no_na != activity)
any(activity_no_na != activity)
activity_no_na != activity
which(activity_no_na != activity)
sum(activity_no_na != activity)
sum(activity_no_na != activity, na.rm=TRUE)
View(activity)
View(activity_no_na)
hist(steps_per_day$steps)
steps_per_5min_interval_no_na <- NA
steps_per_day_no_na <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$date), FUN = sum), c("day","steps"))
hist(steps_per_day_no_na$steps)
hist(steps_per_day$steps)
hist(steps_per_day$steps)
hist(steps_per_day_no_na$steps)
View(steps_per_day)
par(mfrow = c(1, 2))
hist(steps_per_day$steps)
hist(steps_per_day_no_na$steps)
hist(steps_per_day$steps)
hist(steps_per_day_no_na$steps)
hist(steps_per_day$steps, ylim=c(0, 35))
hist(steps_per_day_no_na$steps, ylim=c(0, 35))
View(steps_per_day_no_na)
sum(steps_per_5min_time$steps)
mean(steps_per_day_no_na$steps, na.rm = TRUE)
mean(steps_per_day$steps, na.rm = TRUE)
mean(steps_per_day_no_na$steps)
mean(steps_per_day$steps)
mean(steps_per_day_no_na$steps, na.rm = TRUE)
mean(steps_per_day_no_na$steps)
median(steps_per_day_no_na$steps, na.rm = TRUE)
median(steps_per_day_no_na$steps)
mean(steps_per_day_no_na$steps)
median(steps_per_day$steps, na.rm = TRUE)
median(steps_per_day_no_na$steps)
weekday(Sys.time())
?weekday
?weekdays
weekdays(Sys.time())
unique(weekdays(activity_no_na$date))
weekdays(activity_no_na$date)) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
?factor
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- as.factor("Weekday")
View(activity_no_na)
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- factor("Weekday")
View(activity_no_na)
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- "Weekday"
View(activity_no_na)
activity_no_na[activity_no_na$day == '2012-10-06']
activity_no_na[activity_no_na$date == '2012-10-06']
activity_no_na[activity_no_na$date == '2012-10-06',]
unique(weekdays(activity_no_na$date))
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c( "Saturday", "Sunday")] <- "Weekend"
activity_no_na[activity_no_na$date == '2012-10-06',]
as.factor(activity_no_na$weekde)
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- factor("Weekday")
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c( "Saturday", "Sunday")] <- factor("Weekend")
View(activity_no_na)
str(activity_no_na)
class(activity_no_na$weekde)
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- as.factor("Weekday")
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c( "Saturday", "Sunday")] <- as.factor("Weekend")
str(activity_no_na)
activity_no_na$weekde <- factor(activity_no_na$weekde, levels = c("Weekday","Weekend"))
View(activity_no_na)
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- "Weekday"
activity_no_na$weekde[weekdays(activity_no_na$date) %in% c( "Saturday", "Sunday")] <- "Weekend"
activity_no_na$weekde <- factor(activity_no_na$weekde, levels = c("Weekday","Weekend"))
View(activity_no_na)
class(activity_no_na$weekde)
levels(activity_no_na$weekde)
activity_no_na$test[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- factor(0, labels = c("Weekday","Weekend"))
activity_no_na$test[weekdays(activity_no_na$date) %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")] <- factor(0, labels = "Weekday")
activity_no_na$test <- NULL
View(activity_no_na)
activity_no_na[activity_no_na$date == '2012-10-06',]
par(mfrow = c(2, 1))
with(plot(time ~ mean(steps), type = "l", main = "Average number of steps taken by 5min interval, averaged across all days"))
with(activity_no_na, plot(time ~ mean(steps), type = "l", main = "Average number of steps taken by 5min interval, averaged across all days"))
aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$steps), FUN = mean)
head(aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$steps), FUN = mean))
head(aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$time), FUN = mean))
avg_steps_per_weekde_time <- aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$time), FUN = mean)
View(avg_steps_per_weekde_time)
qplot(time, steps, data = avg_steps_per_weekde_time, facets = . ~ weekde)
library(ggplot2)
qplot(time, steps, data = avg_steps_per_weekde_time, facets = . ~ weekde)
avg_steps_per_weekde_time <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$time), FUN = mean), c("interval","steps"))
qplot(time, steps, data = avg_steps_per_weekde_time, facets = . ~ weekde)
View(avg_steps_per_weekde_time)
aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$time), FUN = mean)
avg_steps_per_weekde_time <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$time), FUN = mean), c("weekde","time",steps"))
avg_steps_per_weekde_time <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$time), FUN = mean), c("weekde","time",steps"))
avg_steps_per_weekde_time <- setNames(aggregate(activity_no_na$steps, by=list(activity_no_na$weekde, activity_no_na$time), FUN = mean), c("weekde","time",steps"))
View(avg_steps_per_weekde_time)
View(avg_steps_per_weekde_time)
View(avg_steps_per_weekde_time)
)
)
)
)
)
0
gf
gfh56456
4
/
?
\
`
)
)
))))))))))))))))))))))))))))))))))
]
